// Copyright (c) 2020, Frank GÃ¶ldner
// All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: fragoe/reusables/v1/contact.proto

package reusables

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Known contact types.
type Contact_ContactType int32

const (
	Contact_CONTACT_TYPE_UNSPECIFIED  Contact_ContactType = 0
	Contact_CONTACT_TYPE_UNKNOWN      Contact_ContactType = 1
	Contact_CONTACT_TYPE_EMAIL        Contact_ContactType = 2
	Contact_CONTACT_TYPE_WEBSITE      Contact_ContactType = 3
	Contact_CONTACT_TYPE_PHONE_MAIN   Contact_ContactType = 4
	Contact_CONTACT_TYPE_PHONE_MOBILE Contact_ContactType = 5
	Contact_CONTACT_TYPE_PHONE_FAX    Contact_ContactType = 6
)

// Enum value maps for Contact_ContactType.
var (
	Contact_ContactType_name = map[int32]string{
		0: "CONTACT_TYPE_UNSPECIFIED",
		1: "CONTACT_TYPE_UNKNOWN",
		2: "CONTACT_TYPE_EMAIL",
		3: "CONTACT_TYPE_WEBSITE",
		4: "CONTACT_TYPE_PHONE_MAIN",
		5: "CONTACT_TYPE_PHONE_MOBILE",
		6: "CONTACT_TYPE_PHONE_FAX",
	}
	Contact_ContactType_value = map[string]int32{
		"CONTACT_TYPE_UNSPECIFIED":  0,
		"CONTACT_TYPE_UNKNOWN":      1,
		"CONTACT_TYPE_EMAIL":        2,
		"CONTACT_TYPE_WEBSITE":      3,
		"CONTACT_TYPE_PHONE_MAIN":   4,
		"CONTACT_TYPE_PHONE_MOBILE": 5,
		"CONTACT_TYPE_PHONE_FAX":    6,
	}
)

func (x Contact_ContactType) Enum() *Contact_ContactType {
	p := new(Contact_ContactType)
	*p = x
	return p
}

func (x Contact_ContactType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_ContactType) Descriptor() protoreflect.EnumDescriptor {
	return file_fragoe_reusables_v1_contact_proto_enumTypes[0].Descriptor()
}

func (Contact_ContactType) Type() protoreflect.EnumType {
	return &file_fragoe_reusables_v1_contact_proto_enumTypes[0]
}

func (x Contact_ContactType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_ContactType.Descriptor instead.
func (Contact_ContactType) EnumDescriptor() ([]byte, []int) {
	return file_fragoe_reusables_v1_contact_proto_rawDescGZIP(), []int{0, 0}
}

// A country specific contact information object.
type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of contact (e.g. phone, email).
	Type Contact_ContactType `protobuf:"varint,1,opt,name=type,proto3,enum=fragoe.reusables.v1.Contact_ContactType" json:"type,omitempty"`
	// The contact value, email address, or any kind of identifier.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Code of the country for which this contact information relevant.
	//
	// Country codes are defined by [ISO 3166](https://en.wikipedia.org/wiki/ISO_3166).
	// It defines two- and three-letter abbreviations for each country or major region
	// in the world. Country codes are set uppercase.
	//
	// Examples:
	//   - "DE"
	//   - "UK"
	Country string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fragoe_reusables_v1_contact_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_fragoe_reusables_v1_contact_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_fragoe_reusables_v1_contact_proto_rawDescGZIP(), []int{0}
}

func (x *Contact) GetType() Contact_ContactType {
	if x != nil {
		return x.Type
	}
	return Contact_CONTACT_TYPE_UNSPECIFIED
}

func (x *Contact) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Contact) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

var File_fragoe_reusables_v1_contact_proto protoreflect.FileDescriptor

var file_fragoe_reusables_v1_contact_proto_rawDesc = []byte{
	0x0a, 0x21, 0x66, 0x72, 0x61, 0x67, 0x6f, 0x65, 0x2f, 0x72, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x66, 0x72, 0x61, 0x67, 0x6f, 0x65, 0x2e, 0x72, 0x65, 0x75, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0xc9, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6f, 0x65, 0x2e, 0x72, 0x65, 0x75, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0xcf, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f,
	0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x57, 0x45, 0x42, 0x53, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17,
	0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48, 0x4f,
	0x4e, 0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f,
	0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x54,
	0x41, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x46,
	0x41, 0x58, 0x10, 0x06, 0x42, 0x94, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x72, 0x61,
	0x67, 0x6f, 0x65, 0x2e, 0x72, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x42, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x1d, 0x66, 0x72, 0x61, 0x67, 0x6f, 0x65, 0x2f, 0x72, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0xa2,
	0x02, 0x05, 0x46, 0x47, 0x52, 0x55, 0x53, 0xaa, 0x02, 0x13, 0x46, 0x72, 0x61, 0x67, 0x6f, 0x65,
	0x2e, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13,
	0x46, 0x72, 0x61, 0x67, 0x6f, 0x65, 0x5c, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x5c, 0x56, 0x31, 0xea, 0x02, 0x15, 0x46, 0x72, 0x61, 0x67, 0x6f, 0x65, 0x3a, 0x3a, 0x52, 0x65,
	0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_fragoe_reusables_v1_contact_proto_rawDescOnce sync.Once
	file_fragoe_reusables_v1_contact_proto_rawDescData = file_fragoe_reusables_v1_contact_proto_rawDesc
)

func file_fragoe_reusables_v1_contact_proto_rawDescGZIP() []byte {
	file_fragoe_reusables_v1_contact_proto_rawDescOnce.Do(func() {
		file_fragoe_reusables_v1_contact_proto_rawDescData = protoimpl.X.CompressGZIP(file_fragoe_reusables_v1_contact_proto_rawDescData)
	})
	return file_fragoe_reusables_v1_contact_proto_rawDescData
}

var file_fragoe_reusables_v1_contact_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fragoe_reusables_v1_contact_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_fragoe_reusables_v1_contact_proto_goTypes = []interface{}{
	(Contact_ContactType)(0), // 0: fragoe.reusables.v1.Contact.ContactType
	(*Contact)(nil),          // 1: fragoe.reusables.v1.Contact
}
var file_fragoe_reusables_v1_contact_proto_depIdxs = []int32{
	0, // 0: fragoe.reusables.v1.Contact.type:type_name -> fragoe.reusables.v1.Contact.ContactType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_fragoe_reusables_v1_contact_proto_init() }
func file_fragoe_reusables_v1_contact_proto_init() {
	if File_fragoe_reusables_v1_contact_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fragoe_reusables_v1_contact_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fragoe_reusables_v1_contact_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fragoe_reusables_v1_contact_proto_goTypes,
		DependencyIndexes: file_fragoe_reusables_v1_contact_proto_depIdxs,
		EnumInfos:         file_fragoe_reusables_v1_contact_proto_enumTypes,
		MessageInfos:      file_fragoe_reusables_v1_contact_proto_msgTypes,
	}.Build()
	File_fragoe_reusables_v1_contact_proto = out.File
	file_fragoe_reusables_v1_contact_proto_rawDesc = nil
	file_fragoe_reusables_v1_contact_proto_goTypes = nil
	file_fragoe_reusables_v1_contact_proto_depIdxs = nil
}
